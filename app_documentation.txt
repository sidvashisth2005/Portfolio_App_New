# Portfolio App Documentation

## Overview
A modern Android portfolio application built with Jetpack Compose, showcasing professional experience, skills, and projects with a cyberpunk-inspired design.

## Features

### 1. Navigation
- Bottom navigation with 4 main sections:
  - Home (Timeline, LinkedIn, GitHub feeds)
  - Projects
  - About
  - Settings
- Smooth transitions and animations between screens
- Custom neon-styled navigation components

### 2. Home Screen
- 3-tab pager layout:
  - Timeline: Professional journey and milestones
  - LinkedIn: Recent posts and activity
  - GitHub: Repository highlights and contributions
- Animated progress bars with neon effects
- Interactive cards with hover effects

### 3. Projects Screen
- Grid layout of project cards
- Project details include:
  - Title and description
  - Technologies used
  - GitHub link
  - Live demo link (if available)
- Filtering and search capabilities
- Project categories and tags

### 4. About Screen
- Professional bio and introduction
- Contact information with clickable links:
  - Email: siddhantvashisth05@gmail.com
  - Phone: +91 8871592579
  - LinkedIn: linkedin.com/in/siddhant-vashisth-04887b29b
  - GitHub: github.com/sidvashisth2005
- Skills section with interactive chips
- Resume download functionality:
  - PDF viewer integration
  - Secure file sharing using FileProvider
  - Automatic file management in workspace

### 5. Settings Screen
- Theme customization:
  - Light/Dark mode
  - Cyberpunk theme options
  - Custom color schemes
- Notification preferences
- Language selection
- Data synchronization options

## Technical Implementation

### Architecture
- MVVM architecture pattern
- Clean Architecture principles
- Repository pattern for data management
- Dependency Injection with Hilt
- Modular project structure

### Build Configuration
- Gradle 8.2.2
- Kotlin 1.9.22
- Compose BOM 2024.02.00
- Android Gradle Plugin 8.2.2
- Optimized dependency management

### UI Components
- Custom composables:
  - NeonCard
  - NeonButton
  - NeonProgressBar
  - NeonChip
  - NeonTopAppBar
- Material 3 design system
- Custom animations and transitions
- Responsive layouts

### Data Management
- Local data storage with Room
- Remote data fetching with Retrofit
- Image loading with Coil
- PDF handling with FileProvider

### Security
- Secure file sharing implementation
- Permission handling
- Data encryption
- Safe external link handling

## Recent Updates

### Build System Improvements
- Optimized build.gradle configuration
- Streamlined plugin management in settings.gradle
- Removed redundant repository declarations
- Enhanced build performance

### Project Detail Screen Refactoring
- Improved tab composables organization
- Converted tab composables to top-level functions
- Enhanced code maintainability and reusability
- Optimized screen performance

### Contact Integration
- Implemented clickable contact links
- Added proper intent handling for:
  - Email client
  - Phone dialer
  - LinkedIn profile
  - GitHub profile
- Enhanced user interaction with visual feedback

### Resume Management
- Added resume download functionality
- Implemented secure file sharing
- Automatic file management:
  - Assets to workspace copying
  - Cache directory handling
  - FileProvider integration
- Error handling and user feedback

### UI Improvements
- Enhanced contact section layout
- Added visual feedback for clickable elements
- Improved error messages and toasts
- Optimized performance

## Dependencies
- Jetpack Compose
- Material 3
- Hilt for DI
- Room for local storage
- Retrofit for networking
- Coil for image loading
- Accompanist for additional Compose utilities
- Kotlin Coroutines
- Lifecycle components
- Navigation Compose

## Future Enhancements
1. AR/VR project showcase
2. Real-time project updates
3. Interactive 3D elements
4. Advanced animations
5. Offline mode improvements
6. Analytics integration
7. Performance optimizations
8. Additional theme options
9. Enhanced build system optimization
10. Improved modularization

## Known Issues
- None currently reported

## Contributing
Please read CONTRIBUTING.md for details on our code of conduct and the process for submitting pull requests.

## License
This project is licensed under the MIT License - see the LICENSE.md file for details. 